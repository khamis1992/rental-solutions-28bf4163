
project_id = "vqdlsidkucrownbfuouq"

[api]
enabled = true
# Port to use for the API URL.
port = 54321
# Schemas to expose in your API. Tables, views and stored procedures in this schema will get API
# endpoints. public and storage are always included.
schemas = ["public", "storage", "graphql_public"]
# Extra schemas to add to the search_path of every request. public is always included.
extra_search_path = ["public", "extensions"]
# The maximum number of rows returns from a view, table, or stored procedure. Limits payload size
# for accidental or malicious requests.
max_rows = 1000

[db]
# Port to use for the local database URL.
port = 54322
# The database major version to use. This has to be the same as your remote database's. Run `SHOW
# server_version;` on the remote database to check.
major_version = 15

[studio]
enabled = true
# Port to use for Supabase Studio.
port = 54323
# External URL to use for accessing Studio.
api_url = "http://localhost"

# Email testing server. Emails sent with the local dev setup are not actually sent - rather, they
# are monitored, and you can view the emails that would have been sent from the web interface.
[inbucket]
enabled = true
# Port to use for the email testing server web interface.
port = 54324
# If you're enabling emails locally, you'll need to provide SMTP credentials.
smtp_port = 54325
# Alternative if you're storing emails to be tested (plain-text)
pop3_port = 54326

[storage]
enabled = true
# The maximum file size allowed (e.g. "5MB", "500KB").
file_size_limit = "50MiB"

[auth]
enabled = true
# The base URL of your website. Used as an allow-list for redirects and for constructing URLs used
# in emails.
site_url = "http://localhost:3000"
# A list of *exact* URLs that auth providers are permitted to redirect to post authentication.
additional_redirect_urls = ["https://localhost:3000"]
# How long tokens are valid for, in seconds. Defaults to 3600 (1 hour), maximum 604,800 seconds (one
# week).
jwt_expiry = 3600
# Allow/disallow new user signups to your project.
enable_signup = true
# If enabled, a user will be required to confirm any email change on both the old, and new email
# addresses. If disabled, only the new email is required to confirm.
double_confirm_changes = true
# If enabled, users need to confirm their email address before signing in.
enable_confirmations = false

# Allows the use of custom SMTP credentials for email sending.
[auth.email]
# Allow email auth.
enable_signup = true
# Disable email confirmations.
enable_confirmations = true
# If enabled, users need to confirm their email address before signing in.
double_confirm_changes = true
# If enabled, users can sign up via email and password.
enable_sign_up = true

# Use custom email templates for email auth.
[auth.email.template]
# The EMAIL content for the confirmation email.
# '{{ .ConfirmationURL }}' is replaced with the URL that users need to visit to confirm their email.
invite = ""
confirmation = ""
recovery = ""
magic_link = ""
email_change = ""

# Use custom SMS templates for SMS auth.
[auth.sms]
enable_signup = true

# Configure one of the supported SMS providers: twilio, messagebird, textlocal, or vonage.
[auth.sms.twilio]
account_sid = ""
message_service_sid = ""
auth_token = ""

# Configure one of the supported SMS providers: twilio, messagebird, textlocal, or vonage.
[auth.sms.messagebird]
access_key = ""
originator = ""

# Configure one of the supported SMS providers: twilio, messagebird, textlocal, or vonage.
[auth.sms.textlocal]
api_key = ""
sender = ""

# Configure one of the supported SMS providers: twilio, messagebird, textlocal, or vonage.
[auth.sms.vonage]
api_key = ""
api_secret = ""
from = ""

[auth.email.template.email_change]
subject = "Confirm Email Change"

[auth.email.template.invite]
subject = "You have been invited"
content_type = ""
content = ""

[auth.email.template.confirmation]
subject = "Confirm Your Signup"
content_type = ""
content = ""

[auth.email.template.recovery]
subject = "Reset Your Password"
content_type = ""
content = ""

[auth.email.template.magic_link]
subject = "Your Magic Link"
content_type = ""
content = ""

[analytics]
enabled = false
port = 54327
vector_port = 54328
backend = "postgres"

# Configure your Edge Functions with the CLI or with environment variables.
[functions]
enabled = true
port = 9000

[functions.api]
verify_jwt = true
