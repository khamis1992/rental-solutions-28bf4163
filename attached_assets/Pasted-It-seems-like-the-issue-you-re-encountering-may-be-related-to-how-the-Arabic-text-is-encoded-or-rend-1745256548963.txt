It seems like the issue you're encountering may be related to how the Arabic text is encoded or rendered when exporting to CSV or PDF. This could be due to incorrect font settings, encoding issues, or the way the text is stored and processed in your app.

Here’s a prompt for a deep investigation into this issue:

---

**Investigation and Fix Plan for Arabic Text Rendering Issue in CSV/PDF Exports**

**1. Investigate Text Encoding and Character Handling:**
- **Check the Encoding Format**: Ensure that the text encoding for Arabic characters is set to UTF-8. This encoding supports all Arabic characters and special symbols.
- **Validate File Saving Process**: Verify that the process of saving/exporting the file (CSV/PDF) respects the proper encoding format. If saving as CSV, ensure that the output file is saved with UTF-8 encoding (e.g., `encoding='utf-8'` for Python’s CSV module). For PDF, ensure the fonts used support Arabic characters.

**2. Investigate Font Rendering Issues:**
- **Check Fonts**: Verify that the fonts used in your application (and in the PDF export library) support Arabic characters. Sometimes, the lack of proper Arabic font support in libraries or rendering engines causes characters to appear as gibberish.
- **Use Arabic-Compatible Fonts**: If necessary, change the font in your PDF generation code to one that properly supports Arabic characters, such as "Arial", "Tahoma", or "Noto Sans Arabic".
  
**3. Inspect App Data Flow:**
- **Database Storage**: Ensure that the database or any other data storage medium is correctly storing Arabic characters. The database should be set to support UTF-8 encoding (e.g., MySQL: `utf8mb4` for full Unicode support).
- **Text Handling in Code**: Verify that no data corruption is happening when the Arabic text is being processed in your code. This includes ensuring that any string manipulation or formatting doesn’t alter or distort the Arabic characters.

**4. Test with Different Tools:**
- **Testing with Different Libraries**: Test the export functionality using different libraries or tools for generating CSV/PDF files. For instance, in Python, `pandas` with `utf-8-sig` encoding might help resolve CSV encoding issues, and libraries like `ReportLab` for PDF may need specific configurations for Arabic support.

**5. Debug and Log:**
- **Add Debugging Logs**: Log the exported file's content (before and after the export) to see how the Arabic text is being handled. This can help isolate whether the issue is during text input, processing, or exporting.
  
**6. Check Application Version and Dependencies:**
- **Check Library Versions**: Make sure you’re using the latest versions of libraries responsible for the export (like ReportLab for PDFs or CSV-handling libraries) since older versions might not fully support Arabic characters.
  
---

This plan should help in identifying the root cause of the issue and solving the problem of Arabic text appearing incorrectly.