{"ast":null,"code":"var _jsxFileName = \"/home/runner/workspace/mobile-fleet-app/src/screens/agreements/AgreementsScreen.tsx\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Text, Card } from 'react-native-paper';\nimport { useQuery } from '@tanstack/react-query';\nimport { supabase } from '../../lib/supabase';\nimport { useNavigation } from '@react-navigation/native';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AgreementsScreen() {\n  const navigation = useNavigation();\n  const {\n    data: agreements,\n    isLoading\n  } = useQuery({\n    queryKey: ['agreements'],\n    queryFn: async () => {\n      const {\n        data,\n        error\n      } = await supabase.from('leases').select(`\n          *,\n          profiles:customer_id(*),\n          vehicles:vehicle_id(*)\n        `);\n      if (error) throw error;\n      return data;\n    }\n  });\n  const renderAgreement = ({\n    item\n  }) => _jsxDEV(TouchableOpacity, {\n    onPress: () => navigation.navigate('AgreementDetail', {\n      id: item.id\n    }),\n    children: _jsxDEV(Card, {\n      style: styles.card,\n      children: _jsxDEV(Card.Content, {\n        children: [_jsxDEV(Text, {\n          variant: \"titleMedium\",\n          children: item.profiles?.full_name || 'Unknown Customer'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          variant: \"bodyMedium\",\n          children: [\"Vehicle: \", item.vehicles?.car_type || 'Unknown Vehicle']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          variant: \"bodyMedium\",\n          children: [\"Status: \", item.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          variant: \"bodyMedium\",\n          children: [\"Amount Paid: $\", item.amount_paid]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n  if (isLoading) {\n    return _jsxDEV(View, {\n      style: styles.container,\n      children: _jsxDEV(Text, {\n        children: \"Loading agreements...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: _jsxDEV(FlatList, {\n      data: agreements,\n      renderItem: renderAgreement,\n      keyExtractor: item => item.id,\n      contentContainerStyle: styles.list\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5'\n  },\n  list: {\n    padding: 16\n  },\n  card: {\n    marginBottom: 16\n  }\n});","map":{"version":3,"names":["React","View","FlatList","StyleSheet","TouchableOpacity","Text","Card","useQuery","supabase","useNavigation","jsxDEV","_jsxDEV","AgreementsScreen","navigation","data","agreements","isLoading","queryKey","queryFn","error","from","select","renderAgreement","item","onPress","navigate","id","children","style","styles","card","Content","variant","profiles","full_name","fileName","_jsxFileName","lineNumber","columnNumber","vehicles","car_type","status","amount_paid","container","renderItem","keyExtractor","contentContainerStyle","list","create","flex","backgroundColor","padding","marginBottom"],"sources":["/home/runner/workspace/mobile-fleet-app/src/screens/agreements/AgreementsScreen.tsx"],"sourcesContent":["\nimport React from 'react';\nimport { View, FlatList, StyleSheet, TouchableOpacity } from 'react-native';\nimport { Text, Card } from 'react-native-paper';\nimport { useQuery } from '@tanstack/react-query';\nimport { supabase } from '../../lib/supabase';\nimport { useNavigation } from '@react-navigation/native';\n\nexport default function AgreementsScreen() {\n  const navigation = useNavigation();\n  const { data: agreements, isLoading } = useQuery({\n    queryKey: ['agreements'],\n    queryFn: async () => {\n      const { data, error } = await supabase\n        .from('leases')\n        .select(`\n          *,\n          profiles:customer_id(*),\n          vehicles:vehicle_id(*)\n        `);\n      \n      if (error) throw error;\n      return data;\n    }\n  });\n\n  const renderAgreement = ({ item }) => (\n    <TouchableOpacity \n      onPress={() => navigation.navigate('AgreementDetail', { id: item.id })}\n    >\n      <Card style={styles.card}>\n        <Card.Content>\n          <Text variant=\"titleMedium\">\n            {item.profiles?.full_name || 'Unknown Customer'}\n          </Text>\n          <Text variant=\"bodyMedium\">\n            Vehicle: {item.vehicles?.car_type || 'Unknown Vehicle'}\n          </Text>\n          <Text variant=\"bodyMedium\">\n            Status: {item.status}\n          </Text>\n          <Text variant=\"bodyMedium\">\n            Amount Paid: ${item.amount_paid}\n          </Text>\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  );\n\n  if (isLoading) {\n    return (\n      <View style={styles.container}>\n        <Text>Loading agreements...</Text>\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      <FlatList\n        data={agreements}\n        renderItem={renderAgreement}\n        keyExtractor={item => item.id}\n        contentContainerStyle={styles.list}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  list: {\n    padding: 16,\n  },\n  card: {\n    marginBottom: 16,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}