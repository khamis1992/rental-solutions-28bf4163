{"ast":null,"code":"var _jsxFileName = \"/home/runner/workspace/mobile-fleet-app/src/screens/auth/LoginScreen.tsx\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { TextInput, Button, Text } from 'react-native-paper';\nimport { supabase } from '../../lib/supabase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginScreen({\n  navigation\n}) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const handleLogin = async () => {\n    const {\n      error\n    } = await supabase.auth.signInWithPassword({\n      email,\n      password\n    });\n    if (!error) {\n      navigation.replace('Dashboard');\n    }\n  };\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(Text, {\n      style: styles.title,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      label: \"Email\",\n      value: email,\n      onChangeText: setEmail,\n      style: styles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      label: \"Password\",\n      value: password,\n      onChangeText: setPassword,\n      secureTextEntry: true,\n      style: styles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), _jsxDEV(Button, {\n      mode: \"contained\",\n      onPress: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    justifyContent: 'center'\n  },\n  title: {\n    fontSize: 24,\n    marginBottom: 20,\n    textAlign: 'center'\n  },\n  input: {\n    marginBottom: 15\n  }\n});","map":{"version":3,"names":["React","useState","View","StyleSheet","TextInput","Button","Text","supabase","jsxDEV","_jsxDEV","LoginScreen","navigation","email","setEmail","password","setPassword","handleLogin","error","auth","signInWithPassword","replace","style","styles","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","label","value","onChangeText","input","secureTextEntry","mode","onPress","create","flex","padding","justifyContent","fontSize","marginBottom","textAlign"],"sources":["/home/runner/workspace/mobile-fleet-app/src/screens/auth/LoginScreen.tsx"],"sourcesContent":["\nimport React, { useState } from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { TextInput, Button, Text } from 'react-native-paper';\nimport { supabase } from '../../lib/supabase';\n\nexport default function LoginScreen({ navigation }: any) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleLogin = async () => {\n    const { error } = await supabase.auth.signInWithPassword({\n      email,\n      password\n    });\n    \n    if (!error) {\n      navigation.replace('Dashboard');\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Login</Text>\n      <TextInput\n        label=\"Email\"\n        value={email}\n        onChangeText={setEmail}\n        style={styles.input}\n      />\n      <TextInput\n        label=\"Password\"\n        value={password}\n        onChangeText={setPassword}\n        secureTextEntry\n        style={styles.input}\n      />\n      <Button mode=\"contained\" onPress={handleLogin}>\n        Login\n      </Button>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 24,\n    marginBottom: 20,\n    textAlign: 'center',\n  },\n  input: {\n    marginBottom: 15,\n  },\n});\n"],"mappings":";AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAExC,SAASC,SAAS,EAAEC,MAAM,EAAEC,IAAI,QAAQ,oBAAoB;AAC5D,SAASC,QAAQ,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,eAAe,SAASC,WAAWA,CAAC;EAAEC;AAAgB,CAAC,EAAE;EACvD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMe,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAM;MAAEC;IAAM,CAAC,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAACC,kBAAkB,CAAC;MACvDP,KAAK;MACLE;IACF,CAAC,CAAC;IAEF,IAAI,CAACG,KAAK,EAAE;MACVN,UAAU,CAACS,OAAO,CAAC,WAAW,CAAC;IACjC;EACF,CAAC;EAED,OACEX,OAAA,CAACP,IAAI;IAACmB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5Bf,OAAA,CAACH,IAAI;MAACe,KAAK,EAAEC,MAAM,CAACG,KAAM;MAAAD,QAAA,EAAC;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EACvCpB,OAAA,CAACL,SAAS;MACR0B,KAAK,EAAC,OAAO;MACbC,KAAK,EAAEnB,KAAM;MACboB,YAAY,EAAEnB,QAAS;MACvBQ,KAAK,EAAEC,MAAM,CAACW;IAAM;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC,EACFpB,OAAA,CAACL,SAAS;MACR0B,KAAK,EAAC,UAAU;MAChBC,KAAK,EAAEjB,QAAS;MAChBkB,YAAY,EAAEjB,WAAY;MAC1BmB,eAAe;MACfb,KAAK,EAAEC,MAAM,CAACW;IAAM;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC,EACFpB,OAAA,CAACJ,MAAM;MAAC8B,IAAI,EAAC,WAAW;MAACC,OAAO,EAAEpB,WAAY;MAAAQ,QAAA,EAAC;IAE/C;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX;AAEA,MAAMP,MAAM,GAAGnB,UAAU,CAACkC,MAAM,CAAC;EAC/Bd,SAAS,EAAE;IACTe,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE,EAAE;IACXC,cAAc,EAAE;EAClB,CAAC;EACDf,KAAK,EAAE;IACLgB,QAAQ,EAAE,EAAE;IACZC,YAAY,EAAE,EAAE;IAChBC,SAAS,EAAE;EACb,CAAC;EACDV,KAAK,EAAE;IACLS,YAAY,EAAE;EAChB;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}